#!/usr/bin/env bash
set -e
[ -n "$RENV_DEBUG" ] && set -x

print_set_version() {
  echo "<version> should be a string matching a R version known by Renv."

  local versions="$(Renv-versions --bare)"
  if [ -z "$versions" ]; then
    echo "There are currently no R versions installed for Renv."
  else
    echo "The currently installed R versions are:"
    echo "$versions" | sed 's/^/  /'
  fi

  echo
  echo "The special version string 'system' will use your default system R."
}

case "$1" in
"") echo "usage: Renv <command> [<args>]

Some useful Renv commands are:
   commands      List all Renv commands
   rehash        Rehash Renv shims (run this after installing binaries)
   global        Set or show the global R version
   local         Set or show the local directory-specific R version
   shell         Set or show the shell-specific R version
   version       Show the current R version
   versions      List all R versions known by Renv
   which         Show the full path for the given R command
   whence        List all R versions with the given command

See 'Renv help <command>' for information on a specific command.
For full documentation, see: https://github.com/viking/Renv#readme"
;;
global) echo "usage: Renv global <version>

Sets the global R version. You can override the global version at
any time by setting a directory-specific version with \`Renv local'
or by setting the RENV_VERSION environment variable.

$(print_set_version)"
;;
local) echo "usage: Renv local <version>
       Renv local --unset

Sets the local directory-specific R version by writing the version
name to a file named '.Renv-version'.

When you run a R command, Renv will look for an '.Renv-version'
file in the current directory and each parent directory. If no such
file is found in the tree, Renv will use the global R version
specified with \`Renv global', or the version specified in the
RENV_VERSION environment variable.

$(print_set_version)"
;;
shell) echo "usage: Renv shell <version>
       Renv shell --unset

Sets a shell-specific R version by setting the 'RENV_VERSION'
environment variable in your shell. This version overrides both
project-specific versions and the global version.

$(print_set_version)"
;;
which) echo "usage: Renv which <command>

Displays the full path to the binary that Renv will execute when you
run the given command."
;;
whence) echo "usage: Renv whence <command>

Lists all R versions with the given command installed."
;;
*)
  command_path="$(command -v "Renv-$1" || true)"
  if [ -n "$command_path" ]; then
    echo "Sorry, the \`$1' command isn't documented yet."
    echo
    echo "You can view the command's source here:"
    echo "$command_path"
    echo
  else
    echo "Renv: no such command \`$1'"
  fi
esac
