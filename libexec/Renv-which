#!/usr/bin/env bash
set -e
[ -n "$RENV_DEBUG" ] && set -x

# Provide Renv completions
if [ "$1" = "--complete" ]; then
  exec Renv shims --short
fi

expand_path() {
  if [ ! -d "$1" ]; then
    return 1
  fi

  local cwd="$(pwd)"
  cd "$1"
  pwd
  cd "$cwd"
}

remove_from_path() {
  local path_to_remove="$(expand_path "$1")"
  local result=""

  if [ -z "$path_to_remove" ]; then
    echo "${PATH}"
    return
  fi

  for path in ${PATH//:/$'\n'}; do
    path="$(expand_path "$path" || true)"
    if [ -n "$path" ] && [ "$path" != "$path_to_remove" ]; then
      result="${result}${path}:"
    fi
  done

  echo "${result%:}"
}

RENV_VERSION="$(Renv-version-name)"
RENV_COMMAND="$1"

if [ -z "$RENV_COMMAND" ]; then
  echo "usage: Renv which COMMAND" >&2
  exit 1
fi

if [ "$RENV_VERSION" = "system" ]; then
  PATH="$(remove_from_path "${RENV_ROOT}/shims")"
  RENV_COMMAND_PATH="$(command -v "$RENV_COMMAND")"
else
  RENV_COMMAND_PATH="${RENV_ROOT}/versions/${RENV_VERSION}/bin/${RENV_COMMAND}"
fi

for script in $(Renv-hooks which); do
  source "$script"
done

if [ -x "$RENV_COMMAND_PATH" ]; then
  echo "$RENV_COMMAND_PATH"
else
  echo "Renv: $RENV_COMMAND: command not found" >&2

  versions="$(Renv-whence "$RENV_COMMAND" || true)"
  if [ -n "$versions" ]; then
    { echo
      echo "The \`$1' command exists in these R versions:"
      echo "$versions" | sed 's/^/  /g'
      echo
    } >&2
  fi

  exit 127
fi
